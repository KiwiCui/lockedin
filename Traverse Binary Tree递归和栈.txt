/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
    //     //recursive
    //     List<Integer> result = new ArrayList<>();
    //     if(null == root) return result;
    //     traverse(root, result);
    //     return result;
    // }
    // private void traverse(TreeNode root, List<Integer> result){
    //     if (root == null) return;
    //     traverse(root.left,result);
    //     result.add(root.val);
    //     traverse(root.right,result);
        //iterative
        List<Integer> result = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        while (root!=null || !stack.empty()){
            while(root!=null){
                stack.add(root);
                root = root.left;
            }
            root = stack.pop();
            result.add(root.val);
            root = root.right;
        }
        return result;
    }
}