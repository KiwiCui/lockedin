class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        if (candidates == null) return result;
        Arrays.sort(candidates);
        List<Integer> tmp = new ArrayList<>();
        getSum(candidates, target, tmp, 0, result);
        return result;
        
    }
    private void getSum(int[] candidates, int target, List<Integer> tmp, int start, List<List<Integer>> result){
        for (int i = start; i < candidates.length; i++){
            if (candidates[i] == target){
                tmp.add(candidates[i]);
                result.add(new ArrayList<Integer>(tmp));
                tmp.remove(tmp.size() - 1);
            }else if (candidates[i] < target){
                tmp.add(candidates[i]);
                getSum(candidates, target-candidates[i],tmp,i,result);
                tmp.remove(tmp.size() - 1);
            }
        }
    }
}